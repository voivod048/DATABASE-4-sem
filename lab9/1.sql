--2
CREATE GLOBAL TEMPORARY TABLE temp_(
  str VARCHAR2(5)
) ON COMMIT PRESERVE ROWS;

INSERT INTO temp_ VALUES ('adjv');
INSERT INTO temp_ VALUES ('asjf');
commit;
SELECT * FROM temp_;
drop table temp_;

--3
CREATE SEQUENCE S1
INCREMENT BY 10
START WITH 1000
NOMAXVALUE
NOMINVALUE
NOCYCLE
NOCACHE
NOORDER;

SELECT S1.NEXTVAL FROM DUAL;
SELECT S1.CURRVAL FROM DUAL;

--4
CREATE SEQUENCE S2
START WITH 10
INCREMENT BY 10
MAXVALUE 100
NOCYCLE;

SELECT S2.NEXTVAL FROM DUAL;

--5
CREATE SEQUENCE S3
START WITH 10
INCREMENT BY -10
MINVALUE -100
MAXVALUE 11
NOCYCLE
ORDER;

SELECT S3.NEXTVAL FROM DUAL;

--6
CREATE SEQUENCE S4
START WITH 1
INCREMENT BY 1
NOMINVALUE
MAXVALUE 10
CYCLE
CACHE 5
NOORDER;

SELECT S4.NEXTVAL FROM DUAL;

--7
SELECT * FROM SYS.ALL_SEQUENCES WHERE SEQUENCE_OWNER = 'SYS';

--8
DROP SEQUENCE S1;
DROP SEQUENCE S2;
DROP SEQUENCE S3;
DROP SEQUENCE S4;

CREATE TABLE T1 (
  N1 NUMBER,
  N2 NUMBER,
  N3 NUMBER,
  N4 NUMBER
) CACHE
  STORAGE (BUFFER_POOL KEEP);

INSERT INTO T1 VALUES (S1.NEXTVAL, S2.NEXTVAL, S3.nextval, S4.NEXTVAL);
INSERT INTO T1 VALUES (S1.NEXTVAL, S2.NEXTVAL, S3.nextval, S4.NEXTVAL);
INSERT INTO T1 VALUES (S1.NEXTVAL, S2.NEXTVAL, S3.nextval, S4.NEXTVAL);
INSERT INTO T1 VALUES (S1.NEXTVAL, S2.NEXTVAL, S3.nextval, S4.NEXTVAL);
INSERT INTO T1 VALUES (S1.NEXTVAL, S2.NEXTVAL, S3.nextval, S4.NEXTVAL);
INSERT INTO T1 VALUES (S1.NEXTVAL, S2.NEXTVAL, S3.nextval, S4.NEXTVAL);
INSERT INTO T1 VALUES (S1.NEXTVAL, S2.NEXTVAL, S3.nextval, S4.NEXTVAL);
COMMIT;
SELECT * FROM T1;

--9
-- Создание кластера ABC
CREATE CLUSTER ABC
  (X NUMBER(10),
   V VARCHAR2(12))
  SIZE 200;

-- Создание таблицы A
CREATE TABLE A
  (XA NUMBER(10),
   VA VARCHAR2(12),
   Extra_Column NUMBER)
  CLUSTER ABC(XA, VA);

-- Создание таблицы B
CREATE TABLE B
  (XB NUMBER(10),
   VB VARCHAR2(12),
   Extra_Column NUMBER)
  CLUSTER ABC(XB, VB);

-- Создание таблицы C
CREATE TABLE C
  (XC NUMBER(10),
   VC VARCHAR2(12),
   Extra_Column NUMBER)
  CLUSTER ABC(XC, VC);

-- Поиск созданных таблиц и кластера в представлениях словаря Oracle
SELECT table_name, cluster_name
FROM user_tables
WHERE cluster_name = 'ABC';

--14
CREATE SYNONYM VFS FOR VFS.VFS_T1;
SELECT * FROM VFS;

--15
CREATE PUBLIC SYNONYM VFS2 FOR VFS.VFS_T2;
SELECT * FROM VFS2;

--16
-- Создание таблицы A
CREATE TABLE AA (
    ID NUMBER PRIMARY KEY,
    Name VARCHAR2(50)
);

-- Создание таблицы B с внешним ключом на таблицу A
CREATE TABLE BB (
    ID NUMBER PRIMARY KEY,
    AA_ID NUMBER,
    Description VARCHAR2(100),
    FOREIGN KEY (AA_ID) REFERENCES AA(ID)
);


-- Заполнение таблиц данными
INSERT INTO AA (ID, Name) VALUES (1, 'Item A');
INSERT INTO AA (ID, Name) VALUES (2, 'Item B');

INSERT INTO BB (ID, AA_ID, Description) VALUES (101, 1, 'Description of Item A');
INSERT INTO BB (ID, AA_ID, Description) VALUES (102, 2, 'Description of Item B');

-- Создание представления V1 на основе inner join таблиц A и B
CREATE VIEW V1 AS
SELECT AA.ID AS AA_ID, AA.Name AS AA_Name, BB.ID AS BB_ID, BB.Description
FROM AA
INNER JOIN BB ON AA.ID = BB.AA_ID;

-- Просмотр данных из представления V1
SELECT * FROM V1;


--17
CREATE MATERIALIZED VIEW LOG ON AA
WITH ROWID, PRIMARY KEY
INCLUDING NEW VALUES;

CREATE MATERIALIZED VIEW LOG ON BB
WITH ROWID, PRIMARY KEY
INCLUDING NEW VALUES;

-- Создание материализованного представления MV_XXX на основе таблиц A и B с обновлением каждые 2 минуты
CREATE MATERIALIZED VIEW MV_VFS
REFRESH FORCE
START WITH SYSDATE
NEXT sysdate + 2 / 1440 with rowid -- обновление каждые 2 минуты
AS
SELECT AA.ID AS AA_ID, AA.Name AS AA_Name, BB.ID AS BB_ID, BB.Description
FROM AA
INNER JOIN BB ON AA.ID = BB.AA_ID;

SELECT * FROM MV_VFS;

--dblink
CREATE DATABASE LINK lab9
CONNECT TO FYODOR IDENTIFIED BY "123"
USING '192.168.142.7:1521/XE';
SELECT * FROM LUC_t@lab9;


DROP TABLE temp_;
DROP TABLE T1;
DROP SEQUENCE S1;
DROP SEQUENCE S2;
DROP SEQUENCE S3;
DROP SEQUENCE S4;

DROP TABLE A;
DROP TABLE B;
DROP TABLE C;
DROP CLUSTER ABC;

DROP SYNONYM VFS;
DROP SYNONYM VFS2;
DROP TABLE AA;
DROP TABLE BB;
DROP VIEW V1;
DROP VIEW MV_VFS;

SELECT * FROM dba_users;